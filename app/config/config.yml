imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    templating:
        engines: ['twig']
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

lexik_maintenance:
    authorized:
        ips: '%allowed_ips_during_maintenance%'
    driver:
        ttl: 3600
        class: '\Lexik\Bundle\MaintenanceBundle\Drivers\FileDriver'
        options: {file_path: "%kernel.project_dir%/var/cache/lock"}

    #Optional. response code and status of the maintenance page
    response:
        code: 503
        status: "Service Temporarily Unavailable"

#start - sonata admin setting
sonata_block:                                           
    blocks:                                         
        # Enable the SonataAdminBundle block                                            
        sonata.admin.block.admin_list:                                          
            contexts:   [admin]                                         
        sonata.block.service.server_run_status:                                         
                   
sonata_admin:                                           
    security:                                           
        handler: sonata.admin.security.handler.role                                         
        information:                                            
            GUEST:    [VIEW, LIST]                                          
            STAFF:    [EDIT, LIST, CREATE]                                          
            EDITOR:   [OPERATOR, EXPORT]                                            
            ADMIN:    [MASTER]                                          
        # permissions not related to an object instance and also to be available when objects do not exist                                          
        # the DELETE admin permission means the user is allowed to batch delete objects                                         
        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]                                           
        # permission related to the objects                                         
        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]                                         
                                            
    title: My Admin                                         
    title_logo: bundles/app/images/logo.png                                         
    options:                                            
        use_icheck: false                                           
    templates:                                          
        user_block: AppBundle:Admin:user_block.html.twig                                            
                                            
    dashboard:                                          
        blocks:                                         
            # display a dashboard block                                         
            - { position: left, type: sonata.admin.block.admin_list }                                           
            - { position: right, type: sonata.block.service.balance_check, roles:[ROLE_VIEW_BALANCE,ROLE_ADMIN]}                                            
sonata_core:                                            
    flashmessage:                                           
        success:                                            
            types:                                          
                - { type: server_run_status_change_success, domain: AppBundle }                                         
        error:                                          
            css_class: danger # optionally, a CSS class can be defined                                          
            types:                                          
                - { type: server_run_status_change_error, domain: AppBundle }                                           
#end - sonata admin setting